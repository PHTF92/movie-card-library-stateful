{"version":3,"sources":["components/Header.jsx","components/SearchBar.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","data.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","React","Component","SearchBar","propriedades","this","props","htmlFor","name","type","value","searchText","onChange","onSearchTextChange","id","checked","bookmarkedOnly","onBookmarkedChange","onSelectedGenreChange","selectedGenre","Rating","rating","MovieCard","movie","title","subtitle","storyline","imagePath","alt","src","MovieList","movies","map","key","AddMovie","state","genre","trocarTitle","bind","trocarSubtitle","trocarImagePath","trocarStoryline","trocarRating","trocarGenre","event","setState","target","parseFloat","valor","aotrocar","funcaoClicar","filme","estado","onClick","console","log","fazerInput","fazerSelect","limparEstado","MovieLibrary","changeHandlerText","changeBookMarker","changeGenre","addicionarFilme","listaFilmes","retorno","filmesTexto","filter","includes","filmesGenero","bookmarked","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d3c4769.chunk.js","sourcesContent":["import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n  render() {\n    const propriedades = this.props;\n    return (\n      <form className=\"form-header\">\n        <div>\n          <label htmlFor=\"name\">Inclui o texto: </label>\n          <input\n            name=\"searchText\" type=\"text\" value={propriedades.searchText}\n            onChange={propriedades.onSearchTextChange} id=\"name\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"bookmark\">Mostrar somente favoritos</label>\n          <input\n            name=\"bookmarkedOnly\" type=\"checkbox\" checked={propriedades.bookmarkedOnly}\n            onChange={propriedades.onBookmarkedChange} id=\"bookmark\"\n          />\n        </div>\n        <div>\n          <label htmlFor=\"genero\">Filtrar por gênero: </label>\n          <select\n            id=\"genero\" name=\"selectedGenre\" onChange={propriedades.onSelectedGenreChange}\n            value={propriedades.selectedGenre}\n          >\n            <option value=\"\">Todos</option>\n            <option value=\"action\">Ação</option>\n            <option value=\"comedy\">Comédia</option>\n            <option value=\"thriller\">Suspense</option>\n          </select>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React from 'react';\n\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={imagePath} />\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={rating} />\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React from 'react';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const movies = this.props.movies;\n    return (\n      <div className=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React from 'react';\n\nclass AddMovie extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n    this.trocarTitle = this.trocarTitle.bind(this);\n    this.trocarSubtitle = this.trocarSubtitle.bind(this);\n    this.trocarImagePath = this.trocarImagePath.bind(this);\n    this.trocarStoryline = this.trocarStoryline.bind(this);\n    this.trocarRating = this.trocarRating.bind(this);\n    this.trocarGenre = this.trocarGenre.bind(this);\n  }\n\n  trocarTitle(event) {\n    this.setState({ title: event.target.value });\n  }\n\n  trocarSubtitle(event) {\n    this.setState({ subtitle: event.target.value });\n  }\n\n  trocarImagePath(event) {\n    this.setState({ imagePath: event.target.value });\n  }\n\n  trocarStoryline(event) {\n    this.setState({ storyline: event.target.value });\n  }\n\n  trocarRating(event) {\n    this.setState({ rating: parseFloat(event.target.value) });\n  }\n\n  trocarGenre(event) {\n    this.setState({ genre: event.target.value });\n  }\n\n  fazerInput(id, name, type, valor, aotrocar) {\n    return (\n      <input\n        id={id}\n        name={name}\n        type={type}\n        value={this.state[valor]}\n        onChange={this[aotrocar]}\n      />\n    );\n  }\n\n  fazerSelect() {\n    return (\n      <select\n        id=\"gen\"\n        name=\"genre\"\n        onChange={this.trocarGenre}\n        value={this.state.genre}\n      >\n        <option value=\"action\">Ação</option>\n        <option value=\"comedy\">Comédia</option>\n        <option value=\"thriller\">Suspense</option>\n      </select>\n    );\n  }\n\n  limparEstado(funcaoClicar) {\n    const filme = this.state;\n    this.setState({\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n    funcaoClicar(filme);\n  }\n\n  render() {\n    const estado = this.state;\n    const { onClick } = this.props;\n    console.log(estado);\n    return (\n      <div>\n        <h2>Adicione um novo filme!</h2>\n        <form className=\"botton-form\">\n          <label htmlFor=\"name\">Título</label>\n          {this.fazerInput('name', 'title', 'text', 'title', 'trocarTitle')}\n          <label htmlFor=\"sub\">Subtítulo</label>\n          {this.fazerInput('sub', 'subtitle', 'text', 'subtitle', 'trocarSubtitle')}\n          <label htmlFor=\"img\">Imagem</label>\n          {this.fazerInput('img', 'imagePath', 'text', 'imagePath', 'trocarImagePath')}\n          <label htmlFor=\"sin\">Sinopse</label>\n          <textarea\n            id=\"sin\" name=\"storyline\" value={estado.storyline}\n            onChange={this.trocarStoryline}\n          />\n          <label htmlFor=\"av\">Avaliação</label>\n          {this.fazerInput('av', 'rating', 'number', 'rating', 'trocarRating')}\n          <label htmlFor=\"gen\">Gênero</label>\n          {this.fazerSelect()}\n          <button type=\"button\" onClick={() => this.limparEstado(onClick)}>Adicionar filme</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      searchText: '',\n      bookmarkedOnly: false,\n      selectedGenre: '',\n      movies: this.props.movies,\n    };\n    this.changeHandlerText = this.changeHandlerText.bind(this);\n    this.changeBookMarker = this.changeBookMarker.bind(this);\n    this.changeGenre = this.changeGenre.bind(this);\n    this.addicionarFilme = this.addicionarFilme.bind(this);\n    this.listaFilmes = this.listaFilmes.bind(this);\n  }\n\n  changeHandlerText(event) {\n    const { value } = event.target;\n    this.setState({ searchText: value });\n  }\n\n  changeBookMarker() {\n    const { bookmarkedOnly } = this.state;\n    const retorno = bookmarkedOnly !== true;\n    this.setState({ bookmarkedOnly: retorno });\n  }\n\n  changeGenre(event) {\n    this.setState({ selectedGenre: event.target.value });\n  }\n\n  addicionarFilme(filme) {\n    this.setState((state) => ({ movies: [...state.movies, filme] }));\n  }\n\n  listaFilmes() {\n    const { movies, searchText, selectedGenre, bookmarkedOnly } = this.state;\n    const filmesTexto = movies\n      .filter((filme) => (filme.title.includes(searchText)\n        || filme.subtitle.includes(searchText) || filme.storyline.includes(searchText)));\n    const filmesGenero = selectedGenre ? filmesTexto\n      .filter((filme) => filme.genre === selectedGenre) : filmesTexto;\n    return bookmarkedOnly ? filmesGenero.filter((filme) => filme.bookmarked) : filmesGenero;\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    return (\n      <div>\n        <h2>My awesome Movie Library</h2>\n        <SearchBar\n          searchText={searchText}\n          onSearchTextChange={this.changeHandlerText}\n          bookmarkedOnly={bookmarkedOnly}\n          onBookmarkedChange={this.changeBookMarker}\n          selectedGenre={selectedGenre}\n          onSelectedGenreChange={this.changeGenre}\n        />\n        <MovieList movies={this.listaFilmes()} />\n        <AddMovie onClick={this.addicionarFilme} />\n      </div>\n    );\n  }\n}\n\nexport default MovieLibrary;\n","const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\nimport './App.css';\n\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\nimport movies from './data';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}